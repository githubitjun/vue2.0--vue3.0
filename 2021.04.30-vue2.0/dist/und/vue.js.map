{"version":3,"file":"vue.js","sources":["../../src/observe/array.js","../../src/util/index.js","../../src/observe/index.js","../../src/state.js","../../src/compiler/parser-html.js","../../src/compiler/index.js","../../src/vdom/patch.js","../../src/observe/watcher.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/create-element.js","../../src/render.js","../../src/initGlobalAPI/index.js","../../src/index.js"],"sourcesContent":["// 我要重写数组的那些方法 7个 push shift unshift pop reverse sort splice 会导致数组本身发生变化\r\n// slice()\r\n\r\nlet oldArrayMethods = Array.prototype;\r\n\r\nexport let arrayMethods = Object.create(oldArrayMethods); // 将原本的数组原型 设置为arrayMethods 的原型\r\n\r\nconst methods = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'sort',\r\n    'splice',\r\n    'reverse'\r\n]\r\n\r\nmethods.forEach(method=>{\r\n    arrayMethods[method] = function(...args){\r\n        const result = oldArrayMethods[method].apply(this,args); // 调用原生对应的方法\r\n        // push unshift 添加的元素可能还是一个对象\r\n        let insered; // 获取到 当前用户插 入的数据\r\n        let ob = this.__ob__;\r\n        switch (method){\r\n            case 'push':\r\n            case 'shift':\r\n                insered = args;\r\n                break;\r\n            case 'splice': // 3个  新增的属性 splice 有删除 新增的的功能 arr.splice(0,1,{name:1})\r\n                inserted = args.slice(2)\r\n            default:\r\n                break;\r\n        }\r\n        if (insered) {\r\n            // 如果新增的数据存在 那么我们也要继续监听;  insered 是个数组 那么就要调用监听数组的方法\r\n            ob.observerArray(insered)\r\n        }\r\n\r\n        return result;\r\n    }\r\n})","\r\n// 判断当前数据是不是对象\r\nexport function isObject(data){\r\n\r\n    return typeof data === 'object' && data !== null\r\n}\r\n\r\n\r\n\r\nexport function def(data,key,value){\r\n    Object.defineProperty(data,key,{\r\n        enumerable:false,\r\n        configurable:false,\r\n        value,\r\n    })\r\n}\r\n\r\n\r\n// 取值时实现代理效果\r\nexport function proxy(vm,source,key){\r\n    Object.defineProperty(vm,key,{\r\n        get(){\r\n            return vm[source][key]\r\n        },\r\n        set(newValue){\r\n            vm[source][key] = newValue; \r\n        }\r\n    })\r\n}\r\n\r\n\r\nconst LIFECYCLE_HOOKS = [\r\n    'beforeCreate',\r\n    'created',\r\n    'beforeMount',\r\n    'mounted',\r\n    'beforeUpdate',\r\n    'updated',\r\n    'beforeDestroy',\r\n    'destroyed'\r\n];\r\n\r\nlet strats = {}\r\n\r\nfunction mergeHook(parentVal,childVal){\r\n    if(childVal){\r\n        if(parentVal){\r\n            return parentVal.concat(childVal);\r\n        }else{\r\n           return [childVal]; \r\n        }\r\n    }else{\r\n        return parentVal;\r\n    }\r\n}\r\nLIFECYCLE_HOOKS.forEach(hook=>{\r\n    strats[hook] = mergeHook\r\n})\r\n\r\n\r\nexport function mergeOptions(parent,child){\r\n    const options = {};\r\n    for(let key in parent){\r\n        mergeField(key);\r\n    }\r\n    for(let key in child){ //  如果已经合并过了就不需要再次合并了\r\n        if(!parent.hasOwnProperty(key)){\r\n            mergeField(key);\r\n        }\r\n    }\r\n    // 默认的合并策略 但是有些属性 需要有特殊的合并方式 生命周期的合并\r\n    function mergeField(key) {\r\n        if(strats[key]) {\r\n            return options[key] = strats[key](parent[key],child[key])\r\n        }\r\n        if(typeof parent[key] === 'object' && typeof child[key] === 'object'){\r\n            options[key] = {\r\n                ...parent[key],\r\n                ...child[key]\r\n            }\r\n        }else if(child[key] == null){\r\n            options[key] = parent[key];\r\n        }else{\r\n            options[key] = child[key];\r\n        }   \r\n    }\r\n    return options;\r\n}","\r\nimport { arrayMethods } from './array'\r\n\r\nimport  { def,isObject,proxy } from '../util/index'\r\nclass Observer {\r\n    constructor(data){\r\n        // vue如果数据的层次过多 需要递归的去解析对象中的属性，依次增加set和get方法\r\n        // value.__ob__ = this; // 我给每一个监控过的对象都增加一个__ob__属性\r\n        def(data,'__ob__',this)\r\n        // 实现对数组的监听\r\n        if (Array.isArray(data)) {\r\n            // 如果是数组的话并不会对索引进行观测 因为会导致性能问题\r\n            // 前端开发中很少很少 去操作索引 push shift unshift \r\n            data.__proto__ =  arrayMethods; // 相当于替换了数组实例的原型\r\n            this.observerArray(data)\r\n        }else {\r\n            // 当不是数组, 是对象时;\r\n            this.walk(data)\r\n        }\r\n    }\r\n    walk(data){\r\n        let keys = Object.keys(data);\r\n        keys.forEach((key,index)=>{\r\n            defineReactive(data,key,data[key]);\r\n        })\r\n    }\r\n    observerArray(value){\r\n        for(let i = 0; i < value.length;i++){\r\n            observe(value[i])\r\n        }\r\n    }\r\n}\r\n\r\nfunction defineReactive(data,key,value){\r\n    observe(value); //value 也可能是一个对象\r\n    Object.defineProperty(data,key,{\r\n        get(){\r\n            return value\r\n        },\r\n        set(newValue){\r\n            if (newValue === value) return\r\n            observe(newValue); // 继续劫持用户设置的值，因为有可能用户设置的值是一个对象\r\n            value = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data){\r\n    \r\n    // 首先判断是不是一个对象\r\n    if (isObject()) {\r\n        // 说明是一个对象\r\n        new Observer(data)\r\n    }else {\r\n        return\r\n    }\r\n    \r\n}","\r\nimport { observe } from './observe/index'\r\nimport { proxy } from './util/index';\r\n\r\nexport function initState(vm){\r\n    const opt = vm.$options;\r\n    // vue 的数据来源 属性 方法 数据 计算属性 watch\r\n    if (opt.props) {\r\n        initProps(vm);\r\n    }\r\n    if (opt.data) {\r\n        initData(vm);\r\n    }\r\n}\r\n\r\nfunction initData(vm){\r\n    let data = vm.$options.data;\r\n\r\n    // data.call(vm) 为了让 data 函数中的 this 指向当前实例 使用了call 方法\r\n    // vm._data 为了使得data 数据能在 外面访问 所以添加在实例上\r\n    data = vm._data = typeof data === 'function' ? data.call(vm):data\r\n\r\n    //  实现 MVVM 劫持数据 \r\n\r\n    // 为了让用户更好的使用, 我希望能够直接 vm.xxx\r\n    for(let key in data){\r\n        proxy(vm, '_data', key);\r\n    }\r\n\r\n    observe(data) // 响应式原理\r\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // abc-aaa\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <aaa:asdads>\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >  <div>\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n\r\nlet root = null; // ast语法树的树根\r\nlet currentParent; // 标识当前父亲是谁\r\nlet stack = [];\r\nconst ELEMENT_TYPE = 1;\r\nconst TEXT_TYPE = 3;\r\n\r\nfunction createASTElement(tagName, attrs) {\r\n    return {\r\n        tag: tagName,\r\n        type: ELEMENT_TYPE,\r\n        children: [],\r\n        attrs,\r\n        parent: null\r\n    }\r\n}\r\n\r\nfunction start(tagName, attrs) {\r\n    // 遇到开始标签 就创建一个ast元素s\r\n    let element = createASTElement(tagName,attrs);\r\n    if(!root){\r\n        root = element;\r\n    }\r\n    currentParent = element; // 把当前元素标记成父ast树\r\n    stack.push(element); // 将开始标签存放到栈中\r\n}\r\n\r\nfunction chars(text) {\r\n    text = text.replace(/\\s/g,'');\r\n    if(text){\r\n        currentParent.children.push({\r\n            text,\r\n            type:TEXT_TYPE\r\n        })\r\n    }\r\n}\r\n\r\nfunction end(tagName) {\r\n    let element = stack.pop(); // 拿到的是ast对象\r\n    // 我要标识当前这个p是属于这个div的儿子的\r\n    currentParent = stack[stack.length-1];\r\n    if(currentParent){\r\n        element.parent = currentParent;\r\n        currentParent.children.push(element); // 实现了一个树的父子关系\r\n    }\r\n}\r\n\r\nexport function parseHTML(html){\r\n    // 不停的去解析html字符串\r\n    while(html){\r\n        let textEnd = html.indexOf('<');\r\n        if (textEnd == 0) {\r\n             // 如果当前索引为0 肯定是一个标签 开始标签 结束标签\r\n             // 获得解析的属性\r\n             let startTagMatch = parseStartTag(); // 通过这个方法获取到匹配的结果 tagName,attrs   \r\n             if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs); // 1解析开始标签\r\n                continue; // 如果开始标签匹配完毕后 继续下一次 匹配\r\n            }\r\n            let endTagMatch = html.match(endTag);\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1]); // 2解析结束标签\r\n                continue;\r\n            }\r\n           \r\n        }\r\n        let text;\r\n        if (textEnd >= 0) {\r\n            text = html.substring(0, textEnd);\r\n        }\r\n        if (text) {\r\n            advance(text.length);\r\n            chars(text); // 3解析文本\r\n        }\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n    function parseStartTag(){\r\n        let start = html.match(startTagOpen);\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],\r\n                attrs:[]\r\n            }\r\n            advance(start[0].length); // 将标签删除\r\n            let end, attr;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                // 将属性进行解析\r\n                advance(attr[0].length); // 将属性去掉\r\n                match.attrs.push({\r\n                    name: attr[1],\r\n                    value: attr[3] || attr[4] || attr[5]\r\n                });\r\n            }\r\n            if (end) { // 去掉开始标签的 >\r\n                advance(end[0].length);\r\n                return match\r\n            }\r\n        }\r\n    }\r\n    return root;\r\n}","// ast语法树 是用对象来描述原生语法的   虚拟dom 用对象来描述dom节点的\r\n// ?: 匹配不捕获\r\n// argumens[0] = 匹配到的标签  arguments[1] 匹配到的标签名字\r\n\r\nimport {parseHTML} from './parser-html';\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\nfunction genProps(attrs){ // 处理属性 拼接成属性的字符串\r\n    let str = '';\r\n    for(let i = 0; i < attrs.length;i++){\r\n        let attr = attrs[i];\r\n        if(attr.name === 'style'){\r\n            // style=\"color: red;fontSize:14px\" => {style:{color:'red'},id:name,}\r\n            let obj = {};\r\n            attr.value.split(';').forEach(item=>{\r\n                let [key,value] = item.split(':');\r\n                obj[key] = value\r\n            });\r\n            attr.value = obj;\r\n        }\r\n        str+= `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0,-1)}}`\r\n}\r\n\r\nfunction genChildren(el){\r\n    let children = el.children;\r\n    if(children && children.length > 0){\r\n        return `${children.map(c=>gen(c)).join(',')}`\r\n    }else{\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction gen(node){\r\n    if(node.type == 1){\r\n        // 元素标签\r\n        return generate(node);\r\n    }else{\r\n        let text = node.text; //   <div>a {{  name  }} b{{age}} c</div>\r\n        let tokens = [];\r\n        let match,index;\r\n        // 每次的偏移量 buffer.split()\r\n        let lastIndex = defaultTagRE.lastIndex = 0; // 只要是全局匹配 就需要将lastIndex每次匹配的时候调到0处\r\n        while(match = defaultTagRE.exec(text)){\r\n            index = match.index;\r\n            if(index > lastIndex){\r\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)));\r\n            }\r\n            tokens.push(`_s(${match[1].trim()})`);\r\n            lastIndex = index + match[0].length;\r\n        }\r\n        if(lastIndex < text.length){\r\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n        }\r\n        return `_v(${tokens.join('+')})`;\r\n    }\r\n}\r\n\r\nfunction generate(el){ // [{name:'id',value:'app'},{}]  {id:app,a:1,b:2}\r\n    let children = genChildren(el);\r\n    let code = `_c(\"${el.tag}\",${\r\n       el.attrs.length?genProps(el.attrs):'undefined'\r\n    }${\r\n        children? `,${children}` :''\r\n    })\r\n    `\r\n    return code;\r\n}\r\n\r\n\r\nexport function compileToFunction (template){\r\n     // 1) 解析html字符串 将html字符串 => ast语法树 \r\n     let root = parseHTML(template);\r\n     // 需要将ast语法树生成最终的render函数  就是字符串拼接 （模板引擎）\r\n     let code = generate(root);\r\n\r\n      // 核心思路就是将模板转化成 下面这段字符串\r\n    //  <div id=\"app\"><p>hello {{name}}</p> hello</div>\r\n    // 将ast树 再次转化成js的语法\r\n    //  _c(\"div\",{id:app},_c(\"p\",undefined,_v('hello' + _s(name) )),_v('hello'))\r\n\r\n    // 所有的模板引擎实现 都需要new Function + with\r\n    let renderFn = new Function(`with(this){ return ${code}}`);\r\n    \r\n    // vue的render 他返回的是虚拟dom\r\n    return renderFn;\r\n}","export function patch(oldVnode,vnode){\n    // 1.判断是更新还是要渲染\n\n    const isRealElement = oldVnode.nodeType;\n    if(isRealElement){\n        const oldElm = oldVnode; // div id=\"app\"\n        const parentElm = oldElm.parentNode; // body\n\n        let el = createElm(vnode);\n        parentElm.insertBefore(el,oldElm.nextSibling)\n        parentElm.removeChild(oldElm);\n\n    }   \n\n    // 递归创建真实节点 替换掉老的节点\n}\nfunction createElm(vnode){ // 根据虚拟节点创建真实的节点\n    let {tag,children,key,data,text} = vnode;\n    // 是标签就创建标签\n    if(typeof tag === 'string'){\n        vnode.el = document.createElement(tag);\n        updateProperties(vnode);\n        children.forEach(child=>{ // 递归创建儿子节点，将儿子节点扔到父节点中\n            return vnode.el.appendChild(createElm(child))\n        })\n    }else{\n        // 虚拟dom上映射着真实dom  方便后续更新操作\n        vnode.el = document.createTextNode(text)\n    }\n    // 如果不是标签就是文本\n    return vnode.el;\n}\n// 更新属性\nfunction updateProperties(vnode){\n    let newProps = vnode.data;\n    let el = vnode.el;\n    for(let key in newProps){\n        if(key === 'style'){\n            for(let styleName in newProps.style){\n                el.style[styleName] = newProps.style[styleName];\n            }\n        }else if(key === 'class'){\n            el.className = newProps.class;\n        }else{\n            el.setAttribute(key,newProps[key]);\n        }\n    }\n}\n","class Watcher {\r\n    constructor(vm,exprOrFn,callback,options){\r\n        this.vm = vm;\r\n        this.callback = callback;\r\n        this.options = options;\r\n\r\n        this.getter = exprOrFn; // 将内部传过来的回调函数 放到getter属性上\r\n\r\n        this.get();\r\n    }\r\n    get(){\r\n        this.getter()\r\n    }\r\n}\r\n\r\nexport default Watcher","\r\nimport {patch} from './vdom/patch'\r\nimport Watcher from './observe/watcher';\r\nexport function lifecycleMixin(Vue) {\r\n    Vue.prototype._update = function (vnode) {\r\n        const vm  = this;\r\n        vm.$el = patch(vm.$el,vnode); // 需要用虚拟节点创建出真实节点 替换掉 真实的$el\r\n       \r\n        // 我要通过虚拟节点 渲染出真实的dom\r\n      \r\n    }\r\n}\r\n\r\n\r\nexport function mountComponent(vm,el){\r\n    const options = vm.$options; // render\r\n    vm.$el = el; // 真实的dom元素\r\n\r\n\r\n    // Watcher 就是用来渲染的\r\n    // vm._render 通过解析的render方法 渲染出虚拟dom _c _v _s\r\n    // vm._update 通过虚拟dom 创建真实的dom  \r\n    callHook(vm,'beforeMount');\r\n    // 渲染页面\r\n    let updateComponent = () =>{ // 无论是渲染还是更新都会调用此方法\r\n        // 返回的是虚拟dom\r\n        vm._update(vm._render());\r\n    }\r\n\r\n    // 渲染watcher 每个组件都有一个watcher   \r\n    new Watcher(vm,updateComponent,()=>{},true); // true表示他是一个渲染watcherr\r\n    callHook(vm,'mounted');\r\n}\r\n\r\nexport function  callHook(vm,hook){\r\n    const handlers = vm.$options[hook] // [fn,fn,fn]\r\n    if (handlers) { // 找到对应的钩子依次执行\r\n        for(let i =0; i< handlers.length;i++){\r\n            handlers[i].call(vm);\r\n        }\r\n    }\r\n}","import { initState } from './state'\r\nimport {compileToFunction} from './compiler/index.js'\r\nimport {mergeOptions} from './util/index';\r\nimport {mountComponent,callHook} from './lifecycle'\r\nexport function initMixin(Vue){\r\n    Vue.prototype._init = function(options){\r\n        // 数据劫持\r\n        const vm = this;\r\n\r\n\r\n         // 将用户传递的 和 全局的进行一个合并 \r\n        vm.$options = mergeOptions(vm.constructor.options,options);\r\n\r\n        callHook(vm,'beforeCreate')\r\n        // 初始化 data 数据\r\n        initState(vm)\r\n        callHook(vm,'created');\r\n        // 如果用户传入了el属性 需要将页面渲染出来\r\n        // 如果用户传入了el 就要实现挂载流程\r\n        if(vm.$options.el){\r\n            vm.$mount(vm.$options.el)\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function (el){\r\n        const vm = this;\r\n        const options = vm.$options;\r\n        el= document.querySelector(el);\r\n        // 默认先会查找有没有render方法，没有render 会 采用template template也没有就用el中的内容\r\n        if (!options.render) {\r\n            // 对模板进行编译\r\n            let template = options.template; //取出模板\r\n            if(!template && el){\r\n                template = el.outerHTML;\r\n            }\r\n            const render = compileToFunction(template);\r\n            options.render = render; \r\n        }\r\n         // 渲染当前的组件 挂载这个组件\r\n         mountComponent(vm,el);\r\n    }\r\n}","export function createElement(tag, data = {}, ...children) {\n    let key = data.key;\n    if(key){\n        delete data.key;\n    }\n    return vnode(tag,data,key,children,undefined);\n}\nexport function createTextNode(text) {\n    return vnode(undefined,undefined,undefined,undefined,text);\n}\n\nfunction vnode(tag, data, key, children, text) {\n    return {\n        tag,\n        data,\n        key,\n        children,\n        text\n    }\n}\n// 虚拟节点 就是通过_c _v 实现用对象来描述dom的操作 （对象）\n\n// 1) 将template转换成ast语法树-> 生成render方法 -> 生成虚拟dom -> 真实的dom\n//  重新生成虚拟dom -> 更新dom\n\n","import {\n    createElement,\n    createTextNode\n} from './vdom/create-element'\nexport function renderMixin(Vue) {\n    // _c 创建元素的虚拟节点\n    // _v 创建文本的虚拟节点\n    // _s JSON.stringify\n\n    Vue.prototype._c = function () {\n        return createElement(...arguments); // tag,data,children1,children2\n    }\n    Vue.prototype._v = function (text) {\n        return createTextNode(text);\n    }\n    Vue.prototype._s = function (val) {\n        return val == null ? '' : (typeof val === 'object' ? JSON.stringify(val) : val);\n    }\n    Vue.prototype._render = function () {\n        const vm = this;\n        const {\n            render\n        } = vm.$options;\n        let vnode = render.call(vm); // 去实例上 取值\n\n        return vnode;\n    }\n}","import {mergeOptions} from '../util/index'\nexport function initGlobalAPI(Vue){\n    // 整合了所有的全局相关的内容\n    Vue.options = {} \n    Vue.mixin = function (mixin) {\n        // 如何实现两个对象的合并 \n        this.options = mergeOptions(this.options,mixin)\n        console.log(this.options)\n    }\n    // 生命周期的合并策略  [beforeCreate]\n}\n\n","import { initMixin } from './init';\r\nimport {renderMixin} from './render';\r\nimport {lifecycleMixin} from './lifecycle';\r\n\r\nimport {initGlobalAPI} from './initGlobalAPI/index'\r\n\r\nfunction Vue(options){\r\n    // 进行vue 的初始化操作\r\n    this._init(options);\r\n}\r\ninitMixin(Vue)\r\nrenderMixin(Vue);\r\nlifecycleMixin(Vue);\r\n\r\n// 初始化全集的api\r\ninitGlobalAPI(Vue)\r\nexport default Vue;"],"names":["oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","result","apply","insered","ob","__ob__","inserted","slice","observerArray","isObject","data","def","key","value","defineProperty","enumerable","configurable","proxy","vm","source","get","set","newValue","LIFECYCLE_HOOKS","strats","mergeHook","parentVal","childVal","concat","hook","mergeOptions","parent","child","options","mergeField","hasOwnProperty","Observer","isArray","__proto__","walk","keys","index","defineReactive","i","length","observe","initState","opt","$options","props","initProps","initData","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","start","element","push","chars","text","replace","end","pop","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","obj","split","item","JSON","stringify","genChildren","el","map","c","gen","join","node","generate","tokens","lastIndex","exec","trim","code","compileToFunction","template","renderFn","Function","patch","oldVnode","vnode","isRealElement","nodeType","oldElm","parentElm","parentNode","createElm","insertBefore","nextSibling","removeChild","document","createElement","updateProperties","appendChild","createTextNode","newProps","styleName","style","className","setAttribute","Watcher","exprOrFn","callback","getter","lifecycleMixin","Vue","_update","$el","mountComponent","callHook","updateComponent","_render","handlers","initMixin","_init","constructor","$mount","querySelector","render","outerHTML","undefined","renderMixin","_c","arguments","_v","_s","val","initGlobalAPI","mixin","console","log"],"mappings":"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"}